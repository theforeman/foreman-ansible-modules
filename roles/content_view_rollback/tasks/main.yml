---
# get data on the current content-view
- name: "Gather Data For Current Content-View From Foreman"
  theforeman.foreman.resource_info:
    username: "{{ foreman_user }}"
    password: "{{ foreman_password }}"
    server_url: "{{ foreman_server_url }}"
    organization: "{{ foreman_organization }}"
    validate_certs: "{{ foreman_validate_certs }}"
    resource: content_views
    search: name = "{{ foreman_content_view }}"
  register: content_view_data

# get data on the current content-view version
- name: "Gather Data For Current Content-View Versions From Foreman"
  theforeman.foreman.resource_info:
    username: "{{ foreman_user }}"
    password: "{{ foreman_password }}"
    server_url: "{{ foreman_server_url }}"
    organization: "{{ foreman_organization }}"
    validate_certs: "{{ foreman_validate_certs }}"
    resource: content_view_versions
    params:
      content_view_id: "{{ content_view_data.resources[0].id }}"
  register: version_information

# creates a dictionary with data formatted as such {'Prod':'11.0'}
- name: "Build Dictionary With Lifecycle Envrionment And Version Number"
  set_fact:
    environments: "{{ environments | default({}) | combine ({item[1].name : item[0].name.split()[-1]}) }}"
  with_subelements:
    - "{{ version_information.resources }}"
    - environments

# create list of content-view versions
- name: "Build List of All Versions of Content-View"
  set_fact:
    cv_versions: "{{ cv_versions | default([]) + [item.major] }}"
  with_items: "{{ version_information.resources }}"

# set the highest version to zero so that we don't use previous Content-View settings
- name: "Set Lowest Version to 0"
  set_fact:
    lowest_version: 0

# set highest number
- name: "Set the Lowest Version of the Content-View Currently Available"
  set_fact: 
    lowest_version: "{{ cv_versions | min }}"

# add one to each of the version numbers
- name: "Update Facts With Decremented Content-View Version Numbers"
  set_fact:
    new_environments: "{{ new_environments | default({}) | combine({item.key: item.value|int - 1.0 }) }}"
  with_dict: "{{ environments }}"

# check if each of the N-1 versions exist
- name: "Check to make sure previous version exists"
  set_fact: 
    non_environments: "{{ non_environments | default({}) | combine({item.key: item.value }) }}"
  with_dict: "{{ new_environments }}"
  when: item.value not in cv_versions

- name: "Check for next closest, lower version"
  include_tasks: version.yml
  with_dict: "{{ non_environments | default({}) }}"
  loop_control:
    loop_var: version

# check if each of the N-1 versions exist
- name: "Check to make sure previous version exists"
  fail:
    msg: "There is no version lower than {{ item.value }} to roll back to for Content-View {{ item.key }}.  Stopping execution."
  with_dict: "{{ new_environments }}"
  when: item.value not in cv_versions

# only promote environments defined in the vars
- name: "Rollback Environments to Version N-1"
  theforeman.foreman.content_view_version:
    username: "{{ foreman_user }}"
    password: "{{ foreman_password }}"
    server_url: "{{ foreman_server_url }}"
    organization: "{{ foreman_organization }}"
    validate_certs: "{{ foreman_validate_certs }}"
    content_view: "{{ foreman_content_view }}"
    # dictionaries aren't ordered and Foreman doesn't want you promoting things out of order
    # but we're promoting them all so we just override that behavior
    force_promote: true
    lifecycle_environments: "{{ item.key }}"
    version: "{{ item.value }}"
  with_dict: "{{ new_environments }}"
  when: item.key in foreman_lifecycle_environments
