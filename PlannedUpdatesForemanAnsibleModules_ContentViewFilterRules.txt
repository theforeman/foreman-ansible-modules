The planned separation of filter and filter rule is implemented in this branch.
The below model for a content view works
Multiple rules can be added and removed from a 
- rpm filter
- modulemd filter
- package_group filter
- erratum_id filter
- docker filter

Known Issues:
- modulemd filter rule with state: absent does not remove the filter rule. It currently needs to be removed manually
- supplying lists to content_view_filter_rule name or errata_ids is not confirmed to be supported
- deb content is not supported

There are several remaining challenges related to usability.
1) providing lists and the rules for providing lists.
  1.1) you should be able to call the content_filter_view_rule module with lists for the following filter types
    1.1.1) rpm
    1.1.2) modulemd
    1.1.3) package_group
    1.1.4) erratum_id
    1.1.5) docker
    1.1.6) deb (no deb fitler is currently implemented)

  1.2) you should be able to call the content_filter_view_rule module with 'present' for any of the above filter types and:
    1.2.1) provide a list. This should mean one or more rules gets created for every element in the list, if it doesn't already exist, based on the criteria
    1.2.2) provide a subset of the list in 1.1.1 resulting in the missing list element(s) being removed without affecting other rules, based on the criteria
   
  1.3) you should be able to call the content_filter_view_rule module with 'absent'  for any of the above filter types and:
    1.3.1) provide a list. This should mean that one or more rules is removed based on the criteria.
    1.3.2) providing '*' with absent, should result in all rules being removed from the filter.
  
  1.4) erratum_date filters do not support lists, please create multiple filters

  Discussion:
  In general we do not want to work directly with ids as this makes any ansible code non-portable.
  rpm, package_group, errata_ids, docker should already support lists
  - this needs to be verified through testing whether the behaviour above is met.
  - this is apparent in app/controllers/katello/api/v2/content_view_filter_rules_controller.rb 

  The erratum filter rule types are lumped into one implementation
  - errata_ids are *not* internal ids, but erratum references in the form of RHEA-2012:0004

  The modulemd filter rule api requires a list of module_stream_ids to create filter rules. 
  - these are internal ids and not something that is specific to the module, like module_spec (N:S:V:C:A)
    we need to abbreviate architecture to arch for the search of the module id and/or restrict the search by repositories
  - we need to supply search parameters to find the module stream that we want
  - with the existing available search params, there is the possibility of multiple return values, especially, if there are multiple architectures in a content view

  In order to remove even a single module_stream rule we need to perform a search (or provide a name). 
  The challenge being in order to get a unique name, you need to fully qualify a module using NSVA
  It is probably better to use search criteria, get and array and create/remove related rules that way.

2) creating rules limited to specific repositories has not been tested and the behaviour of the module when passing repositories is undefined.
   

An example of defining a content view

  - name: "SOE_RHEL8"
    desc: "Red Hat Enterprise Linux 8 Standard Operating Environment Content"
    org: "{{ foreman_initial_organization }}"
    repositories:
    - name: "Red Hat Ansible Engine 2.9 RPMs for RHEL 8 Server x86_64"
      product: "Red Hat Ansible Engine"
    - name: "Red Hat Enterprise Linux 8 for x86_64 - AppStream RPMs 8"
      product: "Red Hat Enterprise Linux for x86_64"
    - name: "Red Hat Enterprise Linux 8 for x86_64 - BaseOS RPMs 8"
      product: "Red Hat Enterprise Linux for x86_64"
    - name: "Red Hat Enterprise Linux 8 for x86_64 - Supplementary RPMs 8"
      product: "Red Hat Enterprise Linux for x86_64"
    - name: "Red Hat Enterprise Linux 8 for x86_64 - AppStream Kickstart 8.5"
      product: "Red Hat Enterprise Linux for x86_64"
    - name: "Red Hat Enterprise Linux 8 for x86_64 - BaseOS Kickstart 8.5"
      product: "Red Hat Enterprise Linux for x86_64"
    - name: "Red Hat Satellite Tools 6.10 for RHEL 8 x86_64 RPMs"
      product: "Red Hat Enterprise Linux Server"
    filters:
    - name: "IncludeAllPackagesNoErrata"
      type: "rpm"
      inclusion: "true"
      description: "Include all packages with no errata for all repositories"
      original_packages: true
      repositories: "[]"
    - name: "IncludeAllStreamsNoErrata"
      type: "modulemd"
      inclusion: "true"
      description: "Include all packages with no errata for all repositories"
      original_packages: true
      repositories: "[]"
    - name: "IncludeErrataByDate"
      type: "erratum"
      inclusion: "true"
      description: "Include all errata updated as of {{ filter_enddate }}"
      repositories: "[]"
      rules:
      - name: "errata-by-date-{{ filter_enddate }}"
        end_date: "{{ filter_enddate }}"
        date_type: "updated"
        types:
        - "enhancement"
        - "bugfix"
        - "security"
    - name: "ExcludeFireFox"
      type: "rpm"
      inclusion: "false"
      description: "Do not provide Firefox to servers"
      original_packages: true
      repositories: "[]"
      rules:
      - name: "firefox*"
        basearch: "x86_64"
    environments:
    - "Dev"
    - "QA"
    - "Prod"
