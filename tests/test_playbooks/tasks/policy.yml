---
- name: "Create/Update/Delete policy"
  vars:
    domain_state: "present"
  foreman_policy:
    username: "{{ foreman_username }}"
    password: "{{ foreman_password }}"
    server_url: "{{ foreman_server_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    name: "{{ policy_name }}"
    description: "{{ policy_description | default(omit) }}"
    updated_name: "{{ policy_updated_name | default(omit) }}"
    deploy_by: "{{ policy_deploy_by | default(omit) }}"
    scap_content: "{{ policy_scap_content | default(omit) }}"
    scap_content_profile: "{{ policy_scap_content_profile | default(omit) }}"
    tailoring_file: "{{ policy_tailoring_file | default(omit) }}"
    tailoring_file_profile: "{{ policy_tailoring_file_profile | default(omit) }}"
    period: "{{ policy_period | default(omit) }}"
    day_of_month: "{{ policy_day_of_month | default(omit) }}"
    weekday: "{{ policy_weekday | default(omit) }}"
    cron_line: "{{ policy_cron_line | default(omit) }}"
    locations: "{{ policy_locations | default(omit) }}"
    organizations: "{{ policy_organizations | default(omit) }}"
    hostgroups: "{{ policy_hostgroups | default(omit) }}"
    hosts: "{{ policy_hosts | default(omit) }}"
    state: "{{ policy_state }}"
  register: result
- assert:
    fail_msg: "Ensuring policy is {{ policy_state }} failed! (expected_change: {{ expected_change | default('unknown') }})"
    that:
      - result.changed == expected_change
  when: expected_change is defined
...
