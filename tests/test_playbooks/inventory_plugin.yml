---
- hosts: container
  vars:
    foreman_groups:
      - name: group_a
      - name: group_b
      - name: group_c
        label: group_b/group_c
        parent: group_b
    foreman_hosts:
      testhost1.example.com: group_a
      testhost2.example.com: group_b/group_c
    foreman_container: "quay.io/foreman/foreman"
    foreman_version: "2.3-stable"
    foreman_host: "foreman"
    foreman_port: "3000"
    postgres_version: "12"
    postgres_host: "postgres"
    postgres_port: 5432
  collections:
    - community.docker
    - theforeman.foreman
  tasks:
    - name: test inventory
      include_tasks: tasks/inventory_plugin.yml

    - name: Find cache file
      find:
        paths: "{{ lookup('env', 'ANSIBLE_INVENTORY_CACHE_CONNECTION') }}"
        patterns: 'ansible_inventory_*'
      register: cache_files

    - name: Assert exactly one cache file was found
      assert:
        that: cache_files['files'] | length == 1

    - name: Fetch cache file
      slurp:
        src: "{{ cache_files['files'][0]['path'] }}"
      register: cache_slurp

    - name: Assert cache content
      assert:
        that:
          - cache_content_host['hostgroup_name'] == 'group_a'
          - cache_content_host['all_parameters'] != []
          - cache_content_facts['testhost1.example.com']['operatingsystem'] == 'CentOS'
      vars:
        cache_content_host: "{{ (cache_slurp['content'] | b64decode | from_json).get('http://localhost:3000//api/v2/hosts/1') }}"
        cache_content_facts: "{{ (cache_slurp['content'] | b64decode | from_json).get('http://localhost:3000//api/v2/hosts/1/facts') }}"
    - name: Decode cache content from JSON
      set_fact:
        cache_content: "{{ cache_slurp['content'] | b64decode | from_json }}"
